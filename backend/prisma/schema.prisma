datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int         @id @default(autoincrement())
  utorid     String      @unique
  name       String
  email      String      @unique
  password   String
  birthday   String?
  role       String
  points     Int         @default(0)
  createdAt  DateTime    @default(now())
  lastLogin  DateTime?
  verified   Boolean     @default(false)
  activated  Boolean     @default(false)
  suspicious Boolean     @default(false)
  expiresAt  DateTime?
  resetToken String?
  avatarUrl  String?
  used       Json        @default("[]")
  organized  Event[]     @relation("EventOrganizers")
  guestAt    Event[]     @relation("EventGuests")
}

model Promotion {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  type        String
  startTime   DateTime
  endTime     DateTime
  minSpending Float?
  rate        Float?
  points      Int       @default(0)
}

model Transaction { 
  id            Int         @id @default(autoincrement())
  utorid        String
  amount        Int      
  type          String
  spent         Float?
  remark        String      @default("")
  relatedId     Int?
  redeemed      Int?
  promotionIds  Json        @default("[]")
  suspicious    Boolean     @default(false)
  createdBy     String
  processedBy   String?
}

model Event {
  id            Int         @id @default(autoincrement())
  name          String
  description   String
  location      String
  startTime     DateTime
  endTime       DateTime
  capacity      Int?
  pointsRemain  Int
  pointsAwarded Int
  published     Boolean     @default(false)
  full          Boolean     @default(false)
  organizers    User[]      @relation("EventOrganizers")
  guests        User[]      @relation("EventGuests")
}